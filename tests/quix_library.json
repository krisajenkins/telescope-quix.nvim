[
  {
    "itemId": "9514c27e-c924-4d3b-ab47-9ecfe6570293",
    "name": "Kafka Connect Source",
    "language": "Python",
    "tags": [
      "Advanced",
      "Source",
      "Connectors",
      "Kafka"
    ],
    "shortDescription": "Publish a Kafka Connect source connector to Quix platform",
    "createdAt": "2024-01-31T17:00:35+00:00",
    "updatedAt": "2024-02-20T09:13:01+00:00",
    "iconFile": "icon.png",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "9514c27e-c924-4d3b-ab47-9ecfe6570294",
    "name": "Kafka Connect Sink",
    "language": "Python",
    "tags": [
      "Advanced",
      "Destination",
      "Connectors",
      "Kafka"
    ],
    "shortDescription": "Publish a Kafka Connect sink connector to Quix platform",
    "createdAt": "2024-01-31T17:00:35+00:00",
    "updatedAt": "2024-02-20T09:13:01+00:00",
    "iconFile": "icon.png",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "fb64b54f-b9b5-41b1-b4a8-d793daca1123",
    "name": "HTTP API - Shell Script",
    "language": "Shell Script",
    "tags": [
      "Quix APIs",
      "Easy",
      "Code samples",
      "Quick Start"
    ],
    "shortDescription": "This sample shows how to use HTTP Writer API in the command-line",
    "sampleTemplate": true,
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00"
  },
  {
    "itemId": "e8102920-b815-4c53-9dcd-f47712345b1c",
    "name": "Postman",
    "language": "Javascript",
    "tags": [
      "Easy",
      "Quix APIs"
    ],
    "shortDescription": "Use our Postman collection to get started with the Quix APIs",
    "sampleTemplate": true,
    "createdAt": "2023-06-29T14:12:08+00:00",
    "updatedAt": "2023-07-20T10:43:44+00:00",
    "iconFile": "postman-logo.svg"
  },
  {
    "itemId": "0983e721-5c85-4f87-8859-51e12e137ee3",
    "name": "Sample template",
    "language": "Python",
    "tags": [
      "Easy",
      "Quick Start",
      "Basic templates"
    ],
    "shortDescription": "A template for creating Quix Code Samples using Python",
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00"
  },
  {
    "itemId": "f86e7b37-2fa2-4df6-a96c-8ca75a0cffc3",
    "name": "Web API Template",
    "language": "NodeJs",
    "tags": [
      "Easy",
      "Basic templates"
    ],
    "shortDescription": "A template for creating web APIs with Node.js",
    "createdAt": "2023-05-23T12:19:12+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00"
  },
  {
    "itemId": "50b9c8da-a101-4383-ad94-49b263b80633",
    "name": "Sample template",
    "language": "NodeJs",
    "tags": [
      "Easy",
      "Basic templates"
    ],
    "shortDescription": "A template for Quix Code Samples Node.js applications",
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00"
  },
  {
    "itemId": "dc712441-abf5-43b7-a7a2-ced9a3f9508b",
    "name": "React starter template",
    "language": "NodeJs",
    "tags": [
      "Easy",
      "Basic templates"
    ],
    "shortDescription": "A template for creating a UI with React",
    "createdAt": "2024-01-24T08:40:07+00:00",
    "updatedAt": "2024-01-24T08:40:07+00:00"
  },
  {
    "itemId": "9d3f9413-51cd-4d88-9149-fe87ca48ccc3",
    "name": "HTTP API",
    "language": "Javascript",
    "tags": [
      "Easy",
      "Quix APIs",
      "Code samples",
      "Quick Start"
    ],
    "shortDescription": "Publish data to a topic using HTTP Writer API",
    "sampleTemplate": true,
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00"
  },
  {
    "itemId": "945c70f6-6051-4f0b-b44e-5662deb23abc",
    "name": "Websocket API",
    "language": "Javascript",
    "tags": [
      "Easy",
      "Quix APIs",
      "Code samples",
      "Quick Start"
    ],
    "shortDescription": "Read data from a topic using our Websockets Reader API",
    "sampleTemplate": true,
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00"
  },
  {
    "itemId": "75369cd3-40d5-471f-8453-ccd2a1cd26d5",
    "name": "Sample template",
    "language": "C#",
    "tags": [
      "Easy",
      "Quick Start",
      "Basic templates"
    ],
    "shortDescription": "A sample template for C# applications. Use this project as the starting point your own C# Quix Sample.",
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00"
  },
  {
    "itemId": "a00cd311-988d-4966-8eb5-eb50ad71dedd",
    "name": "Starter transformation",
    "language": "Python",
    "tags": [
      "Easy",
      "QuixStreams",
      "SDF",
      "Transformation",
      "Quick Start",
      "Basic templates"
    ],
    "shortDescription": "Template using Streaming Data Frames to transform data between source and destination.",
    "createdAt": "2024-02-20T09:13:01+00:00",
    "updatedAt": "2024-02-20T14:22:01+00:00"
  },
  {
    "itemId": "acb7ca8a-c4ba-45b1-9ad4-51df9d479c77",
    "name": "Threshold alert",
    "language": "Python",
    "tags": [
      "Medium",
      "QuixStreams",
      "Transformation"
    ],
    "shortDescription": "Generates an alert when certain numeric threshold is crossed",
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "eec165e1-f648-4e58-9fd3-9af475a840e8",
    "name": "TfL traffic camera frame grabber",
    "language": "Python",
    "tags": [
      "Easy",
      "QuixStreams",
      "Transformation",
      "Mobility"
    ],
    "shortDescription": "Grab frames from your TFL traffic camera feed",
    "createdAt": "2023-05-23T12:19:12+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "f36c1fdd-b900-4ac5-808c-1ea1320471e7",
    "name": "Stream merge",
    "language": "Python",
    "tags": [
      "Easy",
      "QuixStreams",
      "Transformation",
      "Utility"
    ],
    "shortDescription": "Merge the streams from one topic into a single stream on another topic",
    "createdAt": "2023-03-23T15:04:40+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "cec97130-e1bd-4839-8190-a0fdc1f89f71",
    "name": "Snowplow transformation",
    "language": "Python",
    "tags": [
      "Easy",
      "QuixStreams",
      "Transformation",
      "Snowplow"
    ],
    "shortDescription": "Transform raw Snowplow data to Quix format",
    "createdAt": "2023-03-23T15:04:40+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "g207b9ff-3d52-4adb-b99f-e5e46b2642e9",
    "name": "Sentiment analysis",
    "language": "Python",
    "tags": [
      "Medium",
      "QuixStreams",
      "Transformation",
      "Sentiment Analysis",
      "Machine Learning"
    ],
    "shortDescription": "Deploy a sentiment analysis microservice using a Hugging Face model",
    "createdAt": "2023-03-23T15:04:40+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "c53e98ac-4953-4211-9541-d6364ceecbd6",
    "name": "Rolling window",
    "language": "Python",
    "tags": [
      "Medium",
      "QuixStreams",
      "Code samples",
      "Transformation",
      "Utility"
    ],
    "shortDescription": "Performs a rolling window function.",
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "3c160e63-bf8d-453a-b15c-c83f7522a2dc",
    "name": "Subreddit title filter",
    "language": "Python",
    "tags": [
      "Easy",
      "QuixStreams",
      "Transformation",
      "Code samples",
      "Utility"
    ],
    "shortDescription": "Filter Reddit posts containing a specific word",
    "createdAt": "2023-05-23T12:19:12+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "c4f4c164-1e7f-4a2c-81fa-f35f55c2d9b2",
    "name": "RSS data filtering",
    "language": "Python",
    "tags": [
      "Medium",
      "Transformation",
      "Connectors",
      "RSS",
      "QuixStreams",
      "Utility"
    ],
    "shortDescription": "Example of how to filter and augment RSS data",
    "createdAt": "2023-03-23T15:04:40+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "e473cfca-5aba-4cb9-b53a-f0e7e24347cb",
    "name": "Percentage alert",
    "language": "Python",
    "tags": [
      "Easy",
      "QuixStreams",
      "Transformation"
    ],
    "shortDescription": "Generates an alert when certain percentage increase or decrease is achieved",
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "fa339ec4-76cc-4912-bf82-8f5b48972007",
    "name": "New York bikes - Prediction",
    "language": "Python",
    "tags": [
      "Medium",
      "QuixStreams",
      "Transformation",
      "Machine Learning",
      "Mobility"
    ],
    "shortDescription": "Predict availability of bikes in New York",
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00"
  },
  {
    "itemId": "f7169a9d-edef-417f-94d6-4cbfb89ba22c",
    "name": "MATLAB",
    "language": "Python",
    "tags": [
      "Advanced",
      "QuixStreams",
      "Code samples",
      "Transformation",
      "MathWorks",
      "MATLAB",
      "Scientific Computing"
    ],
    "shortDescription": "Transform Quix streams using MATLAB and Simulink",
    "createdAt": "2024-01-24T08:40:07+00:00",
    "updatedAt": "2024-01-24T08:40:07+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "75dc0991-5400-4c90-a809-0f0ebf13ea91",
    "name": "Interpolation",
    "language": "Python",
    "tags": [
      "Medium",
      "QuixStreams",
      "Code samples",
      "Transformation",
      "Utility"
    ],
    "shortDescription": "Performs an interpolation function",
    "createdAt": "2023-05-23T12:19:12+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "666f7253-22c3-41a4-a5e9-9f8ec084f879",
    "name": "In memory view",
    "language": "Python",
    "tags": [
      "Easy",
      "QuixStreams",
      "Code samples",
      "Transformation"
    ],
    "shortDescription": "A template demonstrating how to build an in-memory view.",
    "createdAt": "2023-03-23T15:04:40+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00"
  },
  {
    "itemId": "bfee7144-49f1-411d-b5c3-0d8396e2c946",
    "name": "Computer vision object detection",
    "language": "Python",
    "tags": [
      "Advanced",
      "QuixStreams",
      "Transformation",
      "Vision"
    ],
    "shortDescription": "Computer vision using YOLO v3",
    "createdAt": "2023-03-23T15:04:40+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  },
  {
    "itemId": "d207b9ff-3d52-4adb-b99f-e5e46b2642e9",
    "name": "Hugging Face model",
    "language": "Python",
    "tags": [
      "Medium",
      "QuixStreams",
      "Transformation",
      "Sentiment Analysis",
      "Machine Learning"
    ],
    "shortDescription": "Deploy a Hugging Face model that generates predictions based on the input data",
    "createdAt": "2022-02-15T21:06:18+00:00",
    "updatedAt": "2023-05-23T12:19:12+00:00",
    "deployReady": true,
    "deployable": true
  }
]
